{"componentChunkName":"component---src-templates-post-tsx","path":"/다리위로트럭지나가기/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h1>\n<p>트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다.\n모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다.\n트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.<br>\n※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다.</p>\n<p>예를 들어, 길이가 2이고 10kg 무게를 견디는 다리가 있습니다. 무게가 [7, 4, 5, 6]kg인 트럭이 순서대로 최단 시간 안에 다리를 건너려면 다음과 같이 건너야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">경과 시간\t    다리를 지난 트럭\t    다리를 건너는 트럭\t     대기 트럭\n0\t        []\t                []\t                 [7,4,5,6]\n1~2\t        []\t                [7]\t                 [4,5,6]\n3\t        [7]\t                [4]\t                 [5,6]\n4\t        [7]\t                [4,5]\t             [6]\n5\t        [7,4]\t            [5]\t                 [6]\n6~7\t        [7,4,5]\t            [6]\t                 []\n8\t        [7,4,5,6]\t        []\t                 []</code></pre></div>\n<p>따라서, 모든 트럭이 다리를 지나려면 최소 8초가 걸립니다.</p>\n<p>solution 함수의 매개변수로 다리 길이 bridgelength, 다리가 견딜 수 있는 무게 weight, 트럭별 무게 truckweights가 주어집니다. 이때 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 return 하도록 solution 함수를 완성하세요.</p>\n<h1 id=\"제한-조건\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%A1%B0%EA%B1%B4\" aria-label=\"제한 조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 조건</h1>\n<ul>\n<li>bridge_length는 1 이상 10,000 이하입니다.</li>\n<li>weight는 1 이상 10,000 이하입니다.</li>\n<li>truck_weights의 길이는 1 이상 10,000 이하입니다.</li>\n<li>모든 트럭의 무게는 1 이상 weight 이하입니다.</li>\n</ul>\n<h1 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">bridge_length\tweight\ttruck_weights\t                    return\n2\t            10\t    [7,4,5,6]\t                        8\n100\t            100\t    [10]\t                            101\n100\t            100\t    [10,10,10,10,10,10,10,10,10,10]\t    110</code></pre></div>\n<h1 id=\"해결-방법\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결 방법</h1>\n<p>STEP1,2에서는 다리 위로 트럭이 지나갈 수 있는지 조건 사전 확인 단계, STEP3은 트럭이 다리위로 올릴 수 있는지 확인, STEP4는 트럭 이동, STEP5는 while문의 종단점(트럭이 다리를 다지나간 경우)</p>\n<ul>\n<li>\n<p>STEP1.</p>\n<ul>\n<li>filter: 다리에서 트럭움직인 거리가 다리 길이보다 작은 것</li>\n</ul>\n</li>\n<li>\n<p>STEP2.</p>\n<ul>\n<li>다리위에 있는 트럭 무게 계산</li>\n</ul>\n</li>\n<li>\n<p>STEP3.</p>\n<ul>\n<li>트럭을 하나 더 다리위로 올릴 수 있을지 판단</li>\n<li><u><strong>핵심</strong>: 다리 상태(올라가있는 트럭부게, 이동거리)를 확인할 수 있는 dictionary Object를 statusBridge배열에 push한다.</u></li>\n</ul>\n</li>\n<li>\n<p>STEP4.</p>\n<ul>\n<li>트럭을 1만큼 움직인다.</li>\n</ul>\n</li>\n<li>\n<p>STEP5.</p>\n<ul>\n<li>다리상태, 트럭을 담은 배열이 0이라면 while문을 벗어난다. </li>\n</ul>\n</li>\n</ul>\n<h1 id=\"추가-정보-dictionary-objct\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80-%EC%A0%95%EB%B3%B4-dictionary-objct\" aria-label=\"추가 정보 dictionary objct permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가 정보: dictionary Objct</h1>\n<ul>\n<li>\"forEach, map\"에서 배열 요소가 dictionary object가 인자인 배열은 dictionary Object property를 변경할 수 있다.\n하지만 숫자만 있는 배열은 변하지 않는다. </li>\n<li>\n<p>dictionary object가 배열 요소로 있을 경우 map사용으로 새로운 배열을 만들어 내는것이 좋겠다. </p>\n<ul>\n<li>map으로 순회할 대상 배열도 변경이 된다. 아래 map 예제에 확인 부분을 확인해보자</li>\n</ul>\n</li>\n<li>\n<p>forEach에서 </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token operator\">++</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//a => [1,2,3]</span>\n\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>dist<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>dist<span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>dist<span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bb <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token operator\">++</span>v<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//b  => [{dist:2}, {dist:3}, {dist:4}]</span>\n<span class=\"token comment\">//bb => [{dist:2}, {dist:3}, {dist:4}]</span></code></pre></div>\n</li>\n<li>\n<p>map에서 </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">map에서 확인\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> aa <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token operator\">++</span>v <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//a  : [1,2,3]</span>\n<span class=\"token comment\">//aa : [2,3,4]</span>\n\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>dist<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>dist<span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>dist<span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bb <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>v<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//b  : [{dist:2}, {dist:3}, {dist:4}]   &lt;- 확인!</span>\n<span class=\"token comment\">//bb : [{dist:2}, {dist:3}, {dist:4}]</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"code\" style=\"position:relative;\"><a href=\"#code\" aria-label=\"code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CODE</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> truck_weights</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> statusBridge <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            answer<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//1. filter: 다리에서 트럭움직인 거리가 다리 길이보다 작은 것</span>\n            statusBridge <span class=\"token operator\">=</span> statusBridge<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">o</span> <span class=\"token operator\">=></span> o<span class=\"token punctuation\">.</span>dist <span class=\"token operator\">&lt;</span> bridge_length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//2. 다리위에 있는 트럭 무게 계산</span>\n            <span class=\"token keyword\">var</span> currentWeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            statusBridge<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">o</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                currentWeight <span class=\"token operator\">+=</span> o<span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//3. 트럭을 하나 더 다리위로 올릴 수 있을지 판단</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>weight <span class=\"token operator\">-</span> currentWeight <span class=\"token operator\">>=</span> truck_weights<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">let</span> truck <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                    weight<span class=\"token operator\">:</span> truck_weights<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    dist<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n                <span class=\"token punctuation\">}</span>\n                statusBridge<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>truck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">//4. 트럭을 1만큼 움직인다.</span>\n            statusBridge<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">o</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>o<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// statusBridge.forEach(o => {</span>\n            <span class=\"token comment\">//     o.dist++;</span>\n            <span class=\"token comment\">// });</span>\n\n            <span class=\"token comment\">//5. 다리상태, 트럭을 담은 배열이 0이라면 while문을 벗어난다. </span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>statusBridge<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>truck_weights<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>","excerpt":"문제 설명 트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. \n모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. \n트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length…","tableOfContents":"<ul>\n<li><a href=\"/%EB%8B%A4%EB%A6%AC%EC%9C%84%EB%A1%9C%ED%8A%B8%EB%9F%AD%EC%A7%80%EB%82%98%EA%B0%80%EA%B8%B0/#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\">문제 설명</a></li>\n<li><a href=\"/%EB%8B%A4%EB%A6%AC%EC%9C%84%EB%A1%9C%ED%8A%B8%EB%9F%AD%EC%A7%80%EB%82%98%EA%B0%80%EA%B8%B0/#%EC%A0%9C%ED%95%9C-%EC%A1%B0%EA%B1%B4\">제한 조건</a></li>\n<li><a href=\"/%EB%8B%A4%EB%A6%AC%EC%9C%84%EB%A1%9C%ED%8A%B8%EB%9F%AD%EC%A7%80%EB%82%98%EA%B0%80%EA%B8%B0/#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\">입출력 예</a></li>\n<li><a href=\"/%EB%8B%A4%EB%A6%AC%EC%9C%84%EB%A1%9C%ED%8A%B8%EB%9F%AD%EC%A7%80%EB%82%98%EA%B0%80%EA%B8%B0/#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">해결 방법</a></li>\n<li><a href=\"/%EB%8B%A4%EB%A6%AC%EC%9C%84%EB%A1%9C%ED%8A%B8%EB%9F%AD%EC%A7%80%EB%82%98%EA%B0%80%EA%B8%B0/#%EC%B6%94%EA%B0%80-%EC%A0%95%EB%B3%B4-dictionary-objct\">추가 정보: dictionary Objct</a></li>\n<li><a href=\"/%EB%8B%A4%EB%A6%AC%EC%9C%84%EB%A1%9C%ED%8A%B8%EB%9F%AD%EC%A7%80%EB%82%98%EA%B0%80%EA%B8%B0/#code\">CODE</a></li>\n</ul>","fields":{"slug":"/다리위로트럭지나가기/"},"frontmatter":{"title":"스택,큐_다리위로 트럭지나가기","date":"Mar 21, 2020","tags":["algorithm"],"keywords":["스택,큐"]}}},"pageContext":{"slug":"/다리위로트럭지나가기/","series":[]}}}